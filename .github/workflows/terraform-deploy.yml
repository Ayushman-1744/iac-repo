name: Terraform Deploy (E2E)

on:
  push:
    branches:
      - main
      - dev
      - staging
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment (dev | staging | prod)'
        required: false
        default: 'dev'

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    env:
      TF_VERSION: 1.5.6

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Select environment
        id: env
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ENV="${{ github.event.inputs.env }}"
          else
            BRANCH="${GITHUB_REF##*/}"
            case "$BRANCH" in
              main) ENV="prod" ;;
              staging) ENV="staging" ;;
              dev) ENV="dev" ;;
              *) ENV="dev" ;;
            esac
          fi
          echo "env=$ENV" >> $GITHUB_OUTPUT

      - name: Show selected env
        run: echo "Selected environment = ${{ steps.env.outputs.env }}"

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init -input=false

      - name: Create/select workspace
        working-directory: ./infra
        run: |
          terraform workspace list || true
          if terraform workspace list | grep -q " ${steps.env.outputs.env}$"; then
            terraform workspace select ${{ steps.env.outputs.env }}
          else
            terraform workspace new ${{ steps.env.outputs.env }}
          fi

      - name: Terraform Validate & Format
        working-directory: ./infra
        run: |
          terraform fmt -check || true
          terraform validate

      - name: Terraform Plan
        working-directory: ./infra
        run: terraform plan -var-file=./envs/${{ steps.env.outputs.env }}.tfvars -input=false -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
        working-directory: ./infra
        run: terraform apply -auto-approve tfplan
