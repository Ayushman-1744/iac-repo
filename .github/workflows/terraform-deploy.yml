name: Terraform Deploy (E2E)

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Environment to deploy (dev | staging | prod)"
        required: true
        default: "dev"
  push:
    branches:
      - dev
      - staging
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TERRAFORM_VERSION: 1.6.0
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Environment
        id: set_env
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ENV="${{ github.event.inputs.env }}"
          else
            BRANCH="${GITHUB_REF##*/}"
            case "$BRANCH" in
              main) ENV="prod" ;;
              staging) ENV="staging" ;;
              dev) ENV="dev" ;;
              *) ENV="dev" ;;
            esac
          fi
          echo "env=$ENV" >> $GITHUB_OUTPUT

      - name: Show Selected Environment
        run: echo "Selected environment = ${{ steps.set_env.outputs.env }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init -input=false -reconfigure

      - name: Select/Create Workspace
        working-directory: ./infra
        run: terraform workspace select ${{ steps.set_env.outputs.env }} || terraform workspace new ${{ steps.set_env.outputs.env }}

      - name: Terraform Validate & Format
        working-directory: ./infra
        run: |
          terraform fmt -check || true
          terraform validate

      - name: Terraform Plan
        working-directory: ./infra
        run: terraform plan -var-file=./envs/${{ steps.set_env.outputs.env }}.tfvars -input=false -out=tfplan-${{ steps.set_env.outputs.env }}

      - name: Terraform Apply
        working-directory: ./infra
        run: terraform apply -auto-approve tfplan-${{ steps.set_env.outputs.env }}
